{"version":3,"sources":["components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Todo","state","editText","this","setState","props","todo","text","handleChange","handleDelete","handleEdit","handleConfirm","id","className","checked","data-id","type","defaultChecked","onChange","bind","htmlFor","edit","defaultValue","e","target","value","onClick","Component","Todolist","todos","map","key","App","textInput","filter","handleAdd","preventDefault","length","window","localStorage","getItem","JSON","parse","setItem","stringify","placeholder","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3edbff66.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Todo extends Component {\n  state = {\n    editText: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      editText: this.props.todo.text,\n    });\n  }\n  render() {\n    const {\n      todo,\n      handleChange,\n      handleDelete,\n      handleEdit,\n      handleConfirm,\n    } = this.props;\n    const { id } = todo;\n    return (\n      <div\n        className={todo.checked ? \"todo todo_done\" : \"todo\"}\n        data-id={todo.id}\n      >\n        <input\n          id={\"checkbox\" + todo.id}\n          className=\"todo__radio\"\n          type=\"checkbox\"\n          defaultChecked={todo.checked}\n          onChange={handleChange.bind(this, id)}\n        />\n        <label htmlFor={\"checkbox\" + todo.id} className=\"label\"></label>\n        <div className=\"wrap\">\n          {todo.edit ? (\n            <input\n              className=\"edit\"\n              type=\"text\"\n              defaultValue={todo.text}\n              onChange={(e) =>\n                this.setState({\n                  editText: e.target.value,\n                })\n              }\n            />\n          ) : (\n            <p\n              className={todo.checked ? \"todo__text text_lined\" : \"todo__text\"}\n            >\n              {todo.text}\n            </p>\n          )}\n        </div>\n        {todo.edit ? (\n          <button\n            className=\"todo__edit-button\"\n            onClick={handleConfirm.bind(this, id, this.state.editText)}\n          >\n            Confirm\n          </button>\n        ) : (\n          <button\n            className=\"todo__edit-button\"\n            onClick={handleEdit.bind(this, id)}\n          >\n            Edit\n          </button>\n        )}\n        <button\n          className=\"todo__delete-button\"\n          onClick={handleDelete.bind(this, id)}\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo.js\";\n\nexport default class Todolist extends Component {\n  render() {\n    const {\n      todos,\n      handleDelete,\n      handleChange,\n      handleEdit,\n      handleConfirm,\n    } = this.props;\n    return todos.map((todo) => (\n      <Todo\n        key={todo.id}\n        todo={todo}\n        handleDelete={handleDelete}\n        handleChange={handleChange}\n        handleEdit={handleEdit}\n        handleConfirm={handleConfirm}\n      />\n    ));\n  }\n}\n","import React, { Component } from \"react\";\nimport Todolist from \"./components/Todolist.js\";\n\nexport default class App extends Component {\n  state = {\n    todos: [],\n    textInput: \"\",\n  };\n\n  componentDidMount() {\n    if (window.localStorage.getItem(\"todos\")) {\n      this.setState({\n        todos: JSON.parse(window.localStorage.getItem(\"todos\")),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    window.localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n\n  handleChange = (id) => {\n    this.setState({\n      todos: [\n        ...this.state.todos.map((todo) => {\n          if (todo.id === id) {\n            todo.checked = !todo.checked;\n          }\n          return todo;\n        }),\n      ],\n    });\n  };\n\n  handleDelete = (id) => {\n    this.setState({\n      todos: [\n        ...this.state.todos.filter((todo) => {\n          return todo.id !== id;\n        }),\n      ],\n    });\n  };\n\n  handleEdit = (id) => {\n    this.setState({\n      todos: [\n        ...this.state.todos.map((todo) => {\n          if (todo.id === id) {\n            todo.edit = true;\n          }\n          return todo;\n        }),\n      ],\n    });\n  };\n\n  handleConfirm = (id, editText) => {\n    this.setState({\n      todos: [\n        ...this.state.todos.map((todo) => {\n          if (todo.id === id) {\n            todo.text = editText;\n            todo.edit = false;\n          }\n          return todo;\n        }),\n      ],\n    });\n  };\n\n  handleAdd = (e) => {\n    e.preventDefault();\n    const todo = {\n      id: this.state.todos.length === 0 ? 0 : this.state.todos[0].id + 1,\n      text: this.state.textInput,\n      checked: false,\n    };\n    this.setState({\n      todos: [todo, ...this.state.todos],\n      textInput: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"header\">\n          <form>\n            <label>Type your todo here: </label>\n            <input\n              className=\"text-to-add header__input\"\n              id=\"input\"\n              type=\"text\"\n              placeholder=\"Buy skunk essence\"\n              value={this.state.textInput}\n              onChange={(e) => this.setState({ textInput: e.target.value })}\n            ></input>\n            <button\n              onClick={this.handleAdd}\n              type=\"submit\"\n              className=\"header__button\"\n            >\n              Create\n            </button>\n          </form>\n        </header>\n        <section className=\"todos-container\">\n          <Todolist\n            todos={this.state.todos}\n            handleChange={this.handleChange}\n            handleDelete={this.handleDelete}\n            handleEdit={this.handleEdit}\n            handleConfirm={this.handleConfirm}\n          />\n        </section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}